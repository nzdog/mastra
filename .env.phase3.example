# Phase 3: Privacy, Security & Governance - Environment Variables
# Copy to .env and configure for local development

# ============================================================================
# PERSISTENCE & STORAGE
# ============================================================================

# Storage backend: memory | postgres | dual-write
PERSISTENCE=memory

# PostgreSQL connection (required if PERSISTENCE=postgres or dual-write)
PGHOST=localhost
PGPORT=5432
PGDATABASE=lichen_memory
PGUSER=postgres
PGPASSWORD=
PGSSL=false

# ============================================================================
# ENCRYPTION
# ============================================================================

# Enable encryption at rest (Week 3)
ENCRYPTION_ENABLED=false

# KMS provider: memory | aws | gcp
KMS_PROVIDER=memory

# AWS KMS (if KMS_PROVIDER=aws)
AWS_KMS_KEY_ID=
AWS_REGION=us-east-1

# Google Cloud KMS (if KMS_PROVIDER=gcp)
GCP_KMS_KEY_NAME=
GCP_PROJECT_ID=

# ============================================================================
# PSEUDONYM ROTATION
# ============================================================================

# Enable pseudonym rotation (Week 2)
PSEUDONYM_ROTATION_ENABLED=false

# Rotation period (days)
PSEUDONYM_ROTATION_PERIOD_DAYS=90

# Grace window (days) - accept previous period's IDs
PSEUDONYM_GRACE_DAYS=7

# Current rotation period (format: YYYY-QN)
PSEUDONYM_CURRENT_PERIOD=2025-Q4

# Secret salt for HMAC derivation (CHANGE IN PRODUCTION!)
PSEUDONYM_PERIOD_SALT=default-dev-salt-change-in-prod

# Rotation scheduler settings
ROTATION_CHECK_INTERVAL_MS=3600000  # 1 hour
ROTATION_JITTER_MS=300000           # 5 minutes

# ============================================================================
# AUTHENTICATION & AUTHORIZATION
# ============================================================================

# Auth provider: mock | jwks
AUTH_PROVIDER=mock

# JWKS URL (if AUTH_PROVIDER=jwks)
JWKS_URL=https://your-auth-provider.com/.well-known/jwks.json

# JWT validation (optional)
JWT_ISSUER=https://your-auth-provider.com
JWT_AUDIENCE=lichen-memory-layer

# Required scopes (comma-separated)
REQUIRED_SCOPES_PERSONAL=personal:read,personal:write,personal:delete
REQUIRED_SCOPES_COHORT=cohort:aggregate,cohort:write
REQUIRED_SCOPES_POPULATION=population:read

# ============================================================================
# RATE LIMITING
# ============================================================================

# Enable rate limiting (Week 2)
RATE_LIMIT_ENABLED=false

# Redis URL for rate limiter
REDIS_URL=redis://localhost:6379

# Rate limits (requests per minute)
RATE_LIMIT_PERSONAL=100
RATE_LIMIT_COHORT=10
RATE_LIMIT_POPULATION=10
RATE_LIMIT_PER_IP=1000

# ============================================================================
# CACHING (Week 4)
# ============================================================================

# Enable Redis cache
REDIS_CACHE_ENABLED=false

# Cache TTLs (seconds)
REDIS_CACHE_TTL_COHORT=300    # 5 minutes
REDIS_CACHE_TTL_POPULATION=900  # 15 minutes

# ============================================================================
# DUAL-WRITE MIGRATION (Week 3)
# ============================================================================

# Enable dual-write mode (writes to both memory and postgres)
# Set PERSISTENCE=dual-write to activate
DUAL_WRITE_ENABLED=false

# Primary store for dual-write: memory | postgres (default: memory)
DUAL_WRITE_PRIMARY=memory

# Fail fast if secondary write fails (default: false)
# If false, request succeeds even if secondary store fails
DUAL_WRITE_FAIL_FAST=false

# Backfill configuration
BACKFILL_BATCH_SIZE=100
BACKFILL_DRY_RUN=false
BACKFILL_CONSENT_FAMILY=  # Optional: Filter by consent family

# ============================================================================
# PHASE 2 COMPATIBILITY (existing vars)
# ============================================================================

# Skip API key check for dev
SKIP_API_KEY_CHECK=true

# CORS configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
CORS_ALLOW_CREDENTIALS=false

# Server port
PORT=4099
