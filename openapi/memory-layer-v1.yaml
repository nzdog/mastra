openapi: 3.0.3
info:
  title: Lichen Protocol Memory Layer API
  version: 1.0.0
  description: |
    Memory Layer API for the Lichen Protocol system. Provides consent-aware memory operations
    across three consent families: personal, cohort, and population.

    ## Consent Families

    - **Personal**: User-only access with hashed/pseudonymous identifiers. Operations: store, recall, forget, export
    - **Cohort**: Group-level aggregated data without direct identifiers. Operations: store, recall, distill
    - **Population**: System-wide aggregated data without direct identifiers. Operations: distill

    ## Security

    All endpoints require Bearer token authentication via the Authorization header.
    Consent family authorization is enforced at the middleware level.

    ## SLO Targets

    - Store: 500ms (p99)
    - Recall: 1000ms (p99)
    - Distill: 5000ms (p99)
    - Forget: 500ms (p99)
    - Export: 10000ms (p99)

    ## Audit Trail

    All operations emit audit events and return an `audit_receipt_id` for governance tracking.
  contact:
    name: Lichen Protocol Team
    url: https://github.com/nzdog/mastra
  license:
    name: MIT

servers:
  - url: http://localhost:4099/v1
    description: Local development server
  - url: https://api.lichen.example.com/v1
    description: Production server

security:
  - BearerAuth: []

tags:
  - name: Personal
    description: Personal consent family operations (user-specific data with pseudonymous identifiers only)
  - name: Cohort
    description: Cohort consent family operations (group-level aggregated data)
  - name: Population
    description: Population consent family operations (system-wide aggregated data)
  - name: Health
    description: Service health and monitoring

paths:
  /health:
    get:
      summary: Health Check
      description: Returns service health status including audit system metrics
      operationId: getHealth
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          headers:
            X-API-Version:
              $ref: '#/components/headers/X-API-Version'
            X-Spec-Version:
              $ref: '#/components/headers/X-Spec-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /{family}/store:
    post:
      summary: Store Memory
      description: |
        Stores a new memory record with consent family validation.
        Requires Authorization header with Bearer token.
      operationId: storeMemory
      tags:
        - Personal
        - Cohort
      parameters:
        - $ref: '#/components/parameters/ConsentFamily'
        - $ref: '#/components/parameters/TraceID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreRequest'
            examples:
              personalText:
                summary: Store personal text memory
                value:
                  content:
                    type: text
                    data: "User completed onboarding tutorial"
                    metadata:
                      source: "app.tutorial"
                  metadata:
                    hashed_pseudonym: "hs_abc123def456ghi789jkl012mno345pqr678stu"
                    session_id: "session_abc123"
                    consent_family: "personal"
                    consent_timestamp: "2025-10-17T12:00:00Z"
                    consent_version: "1.0"
              cohortStructured:
                summary: Store cohort structured data
                value:
                  content:
                    type: structured
                    data:
                      action: "feature_used"
                      feature: "dark_mode"
                      duration_seconds: 300
                  metadata:
                    hashed_pseudonym: "a1b2c3d4e5f6789012345678901234567890123456789012345678901234abcd"
                    consent_family: "cohort"
                    consent_timestamp: "2025-10-17T12:00:00Z"
                    consent_version: "1.0"
      responses:
        '201':
          description: Memory successfully stored
          headers:
            X-API-Version:
              $ref: '#/components/headers/X-API-Version'
            X-Spec-Version:
              $ref: '#/components/headers/X-Spec-Version'
            X-SLO-Latency:
              $ref: '#/components/headers/X-SLO-Latency'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /{family}/recall:
    get:
      summary: Recall Memories
      description: |
        Retrieves memory records with consent family enforcement.
        Personal family: returns user's own memories (pseudonymous identifiers only).
        Cohort family: returns aggregated memories (no direct identifiers).
      operationId: recallMemories
      tags:
        - Personal
        - Cohort
      parameters:
        - $ref: '#/components/parameters/ConsentFamily'
        - $ref: '#/components/parameters/TraceID'
        - name: hashed_pseudonym
          in: query
          required: true
          schema:
            type: string
          description: User identifier for filtering memories
        - name: session_id
          in: query
          schema:
            type: string
          description: Optional session filter
        - name: since
          in: query
          schema:
            type: string
            format: date-time
          description: Filter memories created after this timestamp
        - name: until
          in: query
          schema:
            type: string
            format: date-time
          description: Filter memories created before this timestamp
        - name: type
          in: query
          schema:
            type: string
            enum: [text, structured, embedding]
          description: Filter by content type
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
          description: Maximum number of results
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Pagination offset
        - name: sort
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Sort order by created_at
      responses:
        '200':
          description: Memories successfully retrieved
          headers:
            X-API-Version:
              $ref: '#/components/headers/X-API-Version'
            X-Spec-Version:
              $ref: '#/components/headers/X-Spec-Version'
            X-SLO-Latency:
              $ref: '#/components/headers/X-SLO-Latency'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecallResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /{family}/distill:
    post:
      summary: Distill Aggregated Data
      description: |
        Aggregates data with consent family enforcement and k-anonymity.
        Cohort: group-level aggregation (min 5 records).
        Population: system-wide aggregation (min 100 records).
      operationId: distillData
      tags:
        - Cohort
        - Population
      parameters:
        - $ref: '#/components/parameters/ConsentFamily'
        - $ref: '#/components/parameters/TraceID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistillRequest'
            examples:
              cohortCount:
                summary: Count features used by cohort
                value:
                  cohort_id: "cohort_premium_users"
                  aggregation:
                    type: count
                    field: "feature"
                  filters:
                    content_type: structured
                    consent_family: cohort
                  min_records: 5
              populationAverage:
                summary: Average session duration across population
                value:
                  aggregation:
                    type: average
                    field: "duration_seconds"
                    time_bucket: day
                  filters:
                    consent_family: population
                    since: "2025-10-01T00:00:00Z"
                    until: "2025-10-17T23:59:59Z"
                  min_records: 100
      responses:
        '200':
          description: Data successfully aggregated
          headers:
            X-API-Version:
              $ref: '#/components/headers/X-API-Version'
            X-Spec-Version:
              $ref: '#/components/headers/X-Spec-Version'
            X-SLO-Latency:
              $ref: '#/components/headers/X-SLO-Latency'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistillResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /{family}/forget:
    delete:
      summary: Forget Memories
      description: |
        Deletes memory records with consent family enforcement.
        Supports GDPR right to be forgotten.
        Can delete by ID, hashed_pseudonym, or session_id.
      operationId: forgetMemories
      tags:
        - Personal
      parameters:
        - $ref: '#/components/parameters/ConsentFamily'
        - $ref: '#/components/parameters/TraceID'
        - name: id
          in: query
          schema:
            type: string
          description: Specific memory record ID to delete
        - name: hashed_pseudonym
          in: query
          schema:
            type: string
          description: Delete all memories for this user
        - name: session_id
          in: query
          schema:
            type: string
          description: Delete all memories for this session
        - name: reason
          in: query
          schema:
            type: string
          description: Reason for deletion (for audit trail)
        - name: hard_delete
          in: query
          schema:
            type: boolean
            default: false
          description: Whether to perform hard delete (default soft delete)
      responses:
        '200':
          description: Memories successfully deleted
          headers:
            X-API-Version:
              $ref: '#/components/headers/X-API-Version'
            X-Spec-Version:
              $ref: '#/components/headers/X-Spec-Version'
            X-SLO-Latency:
              $ref: '#/components/headers/X-SLO-Latency'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgetResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /{family}/export:
    get:
      summary: Export User Data
      description: |
        Exports user data with consent family enforcement.
        Supports GDPR data portability requirements.
        Returns data in JSON, CSV, or JSON Lines format.
      operationId: exportData
      tags:
        - Personal
      parameters:
        - $ref: '#/components/parameters/ConsentFamily'
        - $ref: '#/components/parameters/TraceID'
        - name: hashed_pseudonym
          in: query
          required: true
          schema:
            type: string
          description: User identifier for export
        - name: format
          in: query
          required: true
          schema:
            type: string
            enum: [json, csv, jsonlines]
          description: Export format
        - name: consent_families
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [personal, cohort, population]
          description: Filter by consent families (comma-separated)
        - name: since
          in: query
          schema:
            type: string
            format: date-time
          description: Filter records created after this timestamp
        - name: until
          in: query
          schema:
            type: string
            format: date-time
          description: Filter records created before this timestamp
        - name: include_deleted
          in: query
          schema:
            type: boolean
            default: false
          description: Include soft-deleted records
        - name: include_audit
          in: query
          schema:
            type: boolean
            default: false
          description: Include audit trail
      responses:
        '200':
          description: Data successfully exported
          headers:
            X-API-Version:
              $ref: '#/components/headers/X-API-Version'
            X-Spec-Version:
              $ref: '#/components/headers/X-Spec-Version'
            X-SLO-Latency:
              $ref: '#/components/headers/X-SLO-Latency'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for user authentication

  parameters:
    ConsentFamily:
      name: family
      in: path
      required: true
      schema:
        type: string
        enum: [personal, cohort, population]
      description: Consent family determining access and aggregation rules

    TraceID:
      name: X-Trace-ID
      in: header
      schema:
        type: string
      description: Optional trace ID for request correlation

  headers:
    X-API-Version:
      description: API version
      schema:
        type: string
        example: "1.0.0"

    X-Spec-Version:
      description: Specification version
      schema:
        type: string
        example: "1.0"

    X-SLO-Latency:
      description: Request latency in milliseconds
      schema:
        type: string
        example: "245ms"

  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - version
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "1.0.0"
        audit_system:
          type: object
          properties:
            ledger_height:
              type: integer
            last_receipt_timestamp:
              type: string
              format: date-time
            merkle_chain_valid:
              type: boolean

    MemoryContent:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [text, structured, embedding]
        data:
          oneOf:
            - type: string
            - type: object
            - type: array
              items:
                type: number
        metadata:
          type: object
          additionalProperties: true

    StoreRequest:
      type: object
      required:
        - content
        - metadata
      properties:
        content:
          $ref: '#/components/schemas/MemoryContent'
        metadata:
          type: object
          required:
            - hashed_pseudonym
            - consent_family
            - consent_timestamp
            - consent_version
          properties:
            hashed_pseudonym:
              type: string
            session_id:
              type: string
            consent_family:
              type: string
              enum: [personal, cohort, population]
            consent_timestamp:
              type: string
              format: date-time
            consent_version:
              type: string
          additionalProperties: true
        expires_at:
          type: string
          format: date-time

    StoreResponse:
      type: object
      required:
        - id
        - hashed_pseudonym
        - consent_family
        - created_at
        - audit_receipt_id
        - timestamp
      properties:
        id:
          type: string
          format: uuid
        hashed_pseudonym:
          type: string
        session_id:
          type: string
        consent_family:
          type: string
          enum: [personal, cohort, population]
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        audit_receipt_id:
          type: string
        timestamp:
          type: string
          format: date-time

    MemoryRecord:
      type: object
      required:
        - id
        - hashed_pseudonym
        - content
        - consent_family
        - consent_timestamp
        - consent_version
        - created_at
        - updated_at
        - access_count
        - audit_receipt_id
      properties:
        id:
          type: string
          format: uuid
        hashed_pseudonym:
          type: string
        session_id:
          type: string
        content:
          $ref: '#/components/schemas/MemoryContent'
        consent_family:
          type: string
          enum: [personal, cohort, population]
        consent_timestamp:
          type: string
          format: date-time
        consent_version:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        access_count:
          type: integer
        audit_receipt_id:
          type: string

    RecallResponse:
      type: object
      required:
        - records
        - pagination
        - query
        - audit_receipt_id
        - timestamp
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/MemoryRecord'
        pagination:
          type: object
          required:
            - total
            - count
            - offset
            - limit
            - has_more
          properties:
            total:
              type: integer
            count:
              type: integer
            offset:
              type: integer
            limit:
              type: integer
            has_more:
              type: boolean
        query:
          type: object
          required:
            - hashed_pseudonym
          properties:
            hashed_pseudonym:
              type: string
            session_id:
              type: string
            since:
              type: string
              format: date-time
            until:
              type: string
              format: date-time
        audit_receipt_id:
          type: string
        timestamp:
          type: string
          format: date-time

    DistillRequest:
      type: object
      required:
        - aggregation
      properties:
        cohort_id:
          type: string
        aggregation:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [count, average, sum, min, max, distribution]
            field:
              type: string
            time_bucket:
              type: string
              enum: [hour, day, week, month]
        filters:
          type: object
          properties:
            content_type:
              type: string
              enum: [text, structured, embedding]
            consent_family:
              type: string
              enum: [cohort, population]
            since:
              type: string
              format: date-time
            until:
              type: string
              format: date-time
          additionalProperties: true
        min_records:
          type: integer
          minimum: 1

    AggregationResult:
      type: object
      required:
        - type
        - value
        - record_count
      properties:
        type:
          type: string
        value:
          oneOf:
            - type: number
            - type: object
              additionalProperties:
                type: number
        record_count:
          type: integer
        time_bucket:
          type: string
        bucket_timestamp:
          type: string
          format: date-time

    DistillResponse:
      type: object
      required:
        - consent_family
        - results
        - metadata
        - audit_receipt_id
        - timestamp
      properties:
        cohort_id:
          type: string
        consent_family:
          type: string
          enum: [cohort, population]
        results:
          type: array
          items:
            $ref: '#/components/schemas/AggregationResult'
        metadata:
          type: object
          required:
            - total_records
            - filtered_records
            - privacy_threshold_met
            - min_records
          properties:
            total_records:
              type: integer
            filtered_records:
              type: integer
            privacy_threshold_met:
              type: boolean
            min_records:
              type: integer
            time_range:
              type: object
              properties:
                start:
                  type: string
                  format: date-time
                end:
                  type: string
                  format: date-time
        audit_receipt_id:
          type: string
        timestamp:
          type: string
          format: date-time

    ForgetResponse:
      type: object
      required:
        - deleted_count
        - deleted_ids
        - hard_delete
        - metadata
        - audit_receipt_id
        - timestamp
      properties:
        deleted_count:
          type: integer
        deleted_ids:
          type: array
          items:
            type: string
        hard_delete:
          type: boolean
        metadata:
          type: object
          properties:
            hashed_pseudonym:
              type: string
            session_id:
              type: string
            reason:
              type: string
        audit_receipt_id:
          type: string
        timestamp:
          type: string
          format: date-time

    ExportMetadata:
      type: object
      required:
        - hashed_pseudonym
        - format
        - record_count
        - size_bytes
        - time_range
        - consent_families
        - includes_deleted
        - includes_audit
      properties:
        hashed_pseudonym:
          type: string
        format:
          type: string
          enum: [json, csv, jsonlines]
        record_count:
          type: integer
        size_bytes:
          type: integer
        time_range:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        consent_families:
          type: array
          items:
            type: string
        includes_deleted:
          type: boolean
        includes_audit:
          type: boolean

    ExportResponse:
      type: object
      required:
        - metadata
        - audit_receipt_id
        - timestamp
      properties:
        export_url:
          type: string
          format: uri
        data:
          type: object
        metadata:
          $ref: '#/components/schemas/ExportMetadata'
        expires_at:
          type: string
          format: date-time
        audit_receipt_id:
          type: string
        timestamp:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      required:
        - error
        - timestamp
        - path
        - method
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              enum:
                - VALIDATION_ERROR
                - UNAUTHORIZED
                - FORBIDDEN
                - NOT_FOUND
                - CONFLICT
                - SLO_VIOLATION
                - INTERNAL_ERROR
                - SERVICE_UNAVAILABLE
            message:
              type: string
            details:
              type: object
              additionalProperties: true
            trace_id:
              type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string
        method:
          type: string

  responses:
    ValidationError:
      description: Request validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: VALIDATION_ERROR
              message: "Invalid request body"
              details:
                field: "content.type"
                reason: "Must be one of: text, structured, embedding"
            timestamp: "2025-10-17T12:00:00Z"
            path: "/v1/personal/store"
            method: "POST"

    Unauthorized:
      description: Authentication required or failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: UNAUTHORIZED
              message: "Missing Authorization header"
            timestamp: "2025-10-17T12:00:00Z"
            path: "/v1/personal/recall"
            method: "GET"

    Forbidden:
      description: Authenticated but lacks permission
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: FORBIDDEN
              message: "Access denied for consent family: population"
              details:
                family: "population"
                hashed_pseudonym: "hs_abc123def456ghi789jkl012mno345pqr678stu"
            timestamp: "2025-10-17T12:00:00Z"
            path: "/v1/population/distill"
            method: "POST"

    NotFound:
      description: Requested resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: NOT_FOUND
              message: "Memory record not found"
              details:
                id: "550e8400-e29b-41d4-a716-446655440000"
            timestamp: "2025-10-17T12:00:00Z"
            path: "/v1/personal/recall"
            method: "GET"

    InternalError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: INTERNAL_ERROR
              message: "An unexpected error occurred"
              trace_id: "trace_1234567890abcdef"
            timestamp: "2025-10-17T12:00:00Z"
            path: "/v1/personal/store"
            method: "POST"
